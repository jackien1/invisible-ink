{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from '../types';\nvar INITIAL_STATE = {\n  cases: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.LOAD_MY_CASES:\n      {\n        return _objectSpread({}, state, {\n          cases: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jackieni/dev/hackathon/invisible-ink/invisible-ink-frontend/redux/reducers/personal_reducer.js"],"names":["types","INITIAL_STATE","cases","state","action","type","LOAD_MY_CASES","payload"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE;AADW,CAAtB;AAIA,eAAe,YAAwC;AAAA,MAA/BC,KAA+B,uEAAvBF,aAAuB;AAAA,MAARG,MAAQ;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,KAAK,CAACM,aAAX;AAA0B;AACtB,iCACOH,KADP;AAEID,UAAAA,KAAK,EAAEE,MAAM,CAACG;AAFlB;AAIH;;AAED;AACI,aAAOJ,KAAP;AATR;AAWH","sourcesContent":["import * as types from '../types';\n\nconst INITIAL_STATE = {\n    cases: []\n};\n\nexport default function(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case types.LOAD_MY_CASES: {\n            return {\n                ...state,\n                cases: action.payload\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}