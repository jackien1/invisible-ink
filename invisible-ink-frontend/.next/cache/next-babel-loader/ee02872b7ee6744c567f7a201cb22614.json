{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as types from '../types';\nimport axios from 'axios';\nimport setAuthToken, { showSuccessModal, showErrorModal } from '../../components/functions';\nimport jwt_decode from 'jwt-decode';\nexport const registerUser = (user, callback) => {\n  return async dispatch => {\n    dispatch({\n      type: types.GET_LOADING\n    });\n\n    try {\n      const res = await axios({\n        method: 'post',\n        url: `${process.env.SERVER_URL}/api/auth/register`,\n        data: _objectSpread({}, user)\n      });\n      console.log('success');\n      const {\n        token\n      } = res.data;\n      localStorage.setItem('jwtToken', token);\n      setAuthToken(token);\n      const decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n      showSuccessModal('Successfully Created User');\n      callback();\n    } catch (err) {\n      console.log(err);\n      showErrorModal(err.message);\n      dispatch({\n        type: types.GET_ERRORS,\n        payload: err.message\n      });\n    }\n  };\n};\nexport const loginUser = (user, callback) => async dispatch => {\n  try {\n    const res = await axios({\n      method: 'post',\n      url: `${process.env.SERVER_URL}/api/auth/login`,\n      data: _objectSpread({}, user)\n    });\n    const {\n      token\n    } = res.data;\n    localStorage.setItem('jwtToken', token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n    callback();\n  } catch (err) {\n    dispatch({\n      type: types.GET_ERRORS,\n      payload: err.response ? err.response : 'Unknown'\n    });\n  }\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: types.SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const logoutUser = callback => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n  callback ? callback() : null;\n};","map":{"version":3,"sources":["/Users/jackieni/dev/hackathon/invisible-ink/invisible-ink-frontend/redux/actions/auth_actions.js"],"names":["types","axios","setAuthToken","showSuccessModal","showErrorModal","jwt_decode","registerUser","user","callback","dispatch","type","GET_LOADING","res","method","url","process","env","SERVER_URL","data","console","log","token","localStorage","setItem","decoded","setCurrentUser","err","message","GET_ERRORS","payload","loginUser","response","SET_CURRENT_USER","logoutUser","removeItem"],"mappings":"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","sourcesContent":["import * as types from '../types';\nimport axios from 'axios';\nimport setAuthToken, { showSuccessModal, showErrorModal } from '../../components/functions';\nimport jwt_decode from 'jwt-decode';\n\nexport const registerUser = (user, callback) => {\n    return async dispatch => {\n        dispatch({\n            type: types.GET_LOADING\n        });\n        try {\n            const res = await axios({\n                method: 'post',\n                url: `${process.env.SERVER_URL}/api/auth/register`,\n                data: { ...user }\n            });\n            console.log('success');\n            const { token } = res.data;\n            localStorage.setItem('jwtToken', token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n            showSuccessModal('Successfully Created User');\n            callback();\n        } catch (err) {\n            console.log(err);\n            showErrorModal(err.message);\n            dispatch({\n                type: types.GET_ERRORS,\n                payload: err.message\n            });\n        }\n    };\n};\n\nexport const loginUser = (user, callback) => async dispatch => {\n    try {\n        const res = await axios({\n            method: 'post',\n            url: `${process.env.SERVER_URL}/api/auth/login`,\n            data: { ...user }\n        });\n\n        const { token } = res.data;\n        localStorage.setItem('jwtToken', token);\n        setAuthToken(token);\n        const decoded = jwt_decode(token);\n        dispatch(setCurrentUser(decoded));\n        callback();\n    } catch (err) {\n        dispatch({\n            type: types.GET_ERRORS,\n            payload: err.response ? err.response : 'Unknown'\n        });\n    }\n};\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: types.SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\nexport const logoutUser = callback => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    callback ? callback() : null;\n};\n"]},"metadata":{},"sourceType":"module"}