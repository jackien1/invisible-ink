{"ast":null,"code":"var _jsxFileName = \"/Users/jackieni/dev/hackathon/invisible-ink/invisible-ink-frontend/components/functions.js\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport web3 from 'web3';\nimport { ClipLoader } from 'react-spinners';\nimport React from 'react';\nimport { Modal } from 'antd';\nexport const showErrorModal = text => {\n  Modal.error({\n    title: 'Error!',\n    content: __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, text)),\n\n    onOk() {}\n\n  });\n};\nexport const showLoadingModal = () => {\n  return Modal.info({\n    title: __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Processing\\u2003\", __jsx(ClipLoader, {\n      size: 30,\n      color: \"#02B875\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })),\n    content: '',\n\n    onOk() {}\n\n  });\n};\nexport const showSuccessModal = text => {\n  Modal.success({\n    title: 'Success!',\n    content: __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, text)),\n\n    onOk() {}\n\n  });\n};\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport const formatPrice = pricestring => {\n  const price = Number.parseInt(pricestring, 10);\n\n  if (isNaN(price)) {\n    return price;\n  }\n\n  const newprice = round(price, 6);\n\n  try {\n    if (price >= Math.pow(10, 19)) {\n      const prices = web3.utils.fromWei(price + '', 'ether');\n      return round(prices, 4) + ' ETH';\n    } else if (price >= Math.pow(10, 13)) {\n      const prices = web3.utils.fromWei(price + '', 'finney');\n      return round(prices, 4) + ' FINNEY';\n    } else {\n      const prices = web3.utils.fromWei(price + '', 'wei');\n      return round(prices, 4) + ' WEI';\n    }\n  } catch (error) {\n    console.log(error);\n    return 'Error';\n  }\n};\n\nfunction round(value, sigfigs) {\n  const tempprice = Number.parseInt(Number.parseFloat(value).toPrecision(sigfigs) * Math.pow(10, sigfigs - 1), 10) / Math.pow(10, sigfigs - 1);\n  return tempprice.toString();\n}\n\nexport const roundHalf = num => {\n  return Math.round(num * 2) / 2;\n};\nexport default setAuthToken;","map":{"version":3,"sources":["/Users/jackieni/dev/hackathon/invisible-ink/invisible-ink-frontend/components/functions.js"],"names":["axios","web3","ClipLoader","React","Modal","showErrorModal","text","error","title","content","onOk","showLoadingModal","info","display","flexDirection","alignItems","showSuccessModal","success","setAuthToken","token","defaults","headers","common","formatPrice","pricestring","price","Number","parseInt","isNaN","newprice","round","Math","pow","prices","utils","fromWei","console","log","value","sigfigs","tempprice","parseFloat","toPrecision","toString","roundHalf","num"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,OAAO,MAAMC,cAAc,GAAGC,IAAI,IAAI;AAClCF,EAAAA,KAAK,CAACG,KAAN,CAAY;AACRC,IAAAA,KAAK,EAAE,QADC;AAERC,IAAAA,OAAO,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,IAAJ,CADJ,CAHI;;AAORI,IAAAA,IAAI,GAAG,CAAE;;AAPD,GAAZ;AASH,CAVM;AAYP,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClC,SAAOP,KAAK,CAACQ,IAAN,CAAW;AACdJ,IAAAA,KAAK,EACD;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE,KAAlC;AAAyCC,QAAAA,UAAU,EAAE;AAArD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEI,MAAC,UAAD;AAAY,MAAA,IAAI,EAAE,EAAlB;AAAsB,MAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFU;AAOdN,IAAAA,OAAO,EAAE,EAPK;;AAQdC,IAAAA,IAAI,GAAG,CAAE;;AARK,GAAX,CAAP;AAUH,CAXM;AAaP,OAAO,MAAMM,gBAAgB,GAAGV,IAAI,IAAI;AACpCF,EAAAA,KAAK,CAACa,OAAN,CAAc;AACVT,IAAAA,KAAK,EAAE,UADG;AAEVC,IAAAA,OAAO,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,IAAJ,CADJ,CAHM;;AAOVI,IAAAA,IAAI,GAAG,CAAE;;AAPC,GAAd;AASH,CAVM;;AAYP,MAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC1B,MAAIA,KAAJ,EAAW;AACPnB,IAAAA,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiDH,KAAjD;AACH,GAFD,MAEO;AACH,WAAOnB,KAAK,CAACoB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACH;AACJ,CAND;;AAQA,OAAO,MAAMC,WAAW,GAAGC,WAAW,IAAI;AACtC,QAAMC,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBH,WAAhB,EAA6B,EAA7B,CAAd;;AACA,MAAII,KAAK,CAACH,KAAD,CAAT,EAAkB;AACd,WAAOA,KAAP;AACH;;AAED,QAAMI,QAAQ,GAAGC,KAAK,CAACL,KAAD,EAAQ,CAAR,CAAtB;;AAEA,MAAI;AACA,QAAIA,KAAK,IAAIM,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,EAAb,CAAb,EAA+B;AAC3B,YAAMC,MAAM,GAAGhC,IAAI,CAACiC,KAAL,CAAWC,OAAX,CAAmBV,KAAK,GAAG,EAA3B,EAA+B,OAA/B,CAAf;AACA,aAAOK,KAAK,CAACG,MAAD,EAAS,CAAT,CAAL,GAAmB,MAA1B;AACH,KAHD,MAGO,IAAIR,KAAK,IAAIM,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,EAAb,CAAb,EAA+B;AAClC,YAAMC,MAAM,GAAGhC,IAAI,CAACiC,KAAL,CAAWC,OAAX,CAAmBV,KAAK,GAAG,EAA3B,EAA+B,QAA/B,CAAf;AACA,aAAOK,KAAK,CAACG,MAAD,EAAS,CAAT,CAAL,GAAmB,SAA1B;AACH,KAHM,MAGA;AACH,YAAMA,MAAM,GAAGhC,IAAI,CAACiC,KAAL,CAAWC,OAAX,CAAmBV,KAAK,GAAG,EAA3B,EAA+B,KAA/B,CAAf;AACA,aAAOK,KAAK,CAACG,MAAD,EAAS,CAAT,CAAL,GAAmB,MAA1B;AACH;AACJ,GAXD,CAWE,OAAO1B,KAAP,EAAc;AACZ6B,IAAAA,OAAO,CAACC,GAAR,CAAY9B,KAAZ;AACA,WAAO,OAAP;AACH;AACJ,CAvBM;;AAyBP,SAASuB,KAAT,CAAeQ,KAAf,EAAsBC,OAAtB,EAA+B;AAC3B,QAAMC,SAAS,GACXd,MAAM,CAACC,QAAP,CACID,MAAM,CAACe,UAAP,CAAkBH,KAAlB,EAAyBI,WAAzB,CAAqCH,OAArC,IAAgDR,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaO,OAAO,GAAG,CAAvB,CADpD,EAEI,EAFJ,IAGIR,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaO,OAAO,GAAG,CAAvB,CAJR;AAKA,SAAOC,SAAS,CAACG,QAAV,EAAP;AACH;;AAED,OAAO,MAAMC,SAAS,GAAGC,GAAG,IAAI;AAC5B,SAAOd,IAAI,CAACD,KAAL,CAAWe,GAAG,GAAG,CAAjB,IAAsB,CAA7B;AACH,CAFM;AAIP,eAAe3B,YAAf","sourcesContent":["import axios from 'axios';\nimport web3 from 'web3';\nimport { ClipLoader } from 'react-spinners';\nimport React from 'react';\nimport { Modal } from 'antd';\n\nexport const showErrorModal = text => {\n    Modal.error({\n        title: 'Error!',\n        content: (\n            <div>\n                <p>{text}</p>\n            </div>\n        ),\n        onOk() {}\n    });\n};\n\nexport const showLoadingModal = () => {\n    return Modal.info({\n        title: (\n            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                Processing&emsp;\n                <ClipLoader size={30} color=\"#02B875\" />\n            </div>\n        ),\n        content: '',\n        onOk() {}\n    });\n};\n\nexport const showSuccessModal = text => {\n    Modal.success({\n        title: 'Success!',\n        content: (\n            <div>\n                <p>{text}</p>\n            </div>\n        ),\n        onOk() {}\n    });\n};\n\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport const formatPrice = pricestring => {\n    const price = Number.parseInt(pricestring, 10);\n    if (isNaN(price)) {\n        return price;\n    }\n\n    const newprice = round(price, 6);\n\n    try {\n        if (price >= Math.pow(10, 19)) {\n            const prices = web3.utils.fromWei(price + '', 'ether');\n            return round(prices, 4) + ' ETH';\n        } else if (price >= Math.pow(10, 13)) {\n            const prices = web3.utils.fromWei(price + '', 'finney');\n            return round(prices, 4) + ' FINNEY';\n        } else {\n            const prices = web3.utils.fromWei(price + '', 'wei');\n            return round(prices, 4) + ' WEI';\n        }\n    } catch (error) {\n        console.log(error);\n        return 'Error';\n    }\n};\n\nfunction round(value, sigfigs) {\n    const tempprice =\n        Number.parseInt(\n            Number.parseFloat(value).toPrecision(sigfigs) * Math.pow(10, sigfigs - 1),\n            10\n        ) / Math.pow(10, sigfigs - 1);\n    return tempprice.toString();\n}\n\nexport const roundHalf = num => {\n    return Math.round(num * 2) / 2;\n};\n\nexport default setAuthToken;\n"]},"metadata":{},"sourceType":"module"}