{"ast":null,"code":"var _jsxFileName = \"/Users/jackieni/dev/hackathon/invisible-ink/invisible-ink-frontend/components/UserInfo.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; //import { setCurrentUser, logoutUser, loginUser } from '../redux/actions/auth_actions';\n\nimport { Divider, Icon, Button, Input } from \"antd\";\nimport { Router } from \"../routes\";\nimport axios from \"axios\";\nimport Web3 from \"web3\";\n\nclass PlayerInfo extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      dcBalance: \"0\",\n      ethBalance: \"0\",\n      value: 0,\n      expand: false,\n      email: \"\",\n      password: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"submit\", async () => {\n      const user = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(user, this.callback);\n    });\n\n    _defineProperty(this, \"callback\", () => {\n      Router.push(\"/cases\");\n    });\n\n    _defineProperty(this, \"links\", [{\n      text: \"Bugs\",\n      icon: \"exclamation-circle\"\n    }, {\n      text: \"Friends\",\n      icon: \"team\"\n    }]);\n  }\n\n  renderNotLoggedIn() {\n    console.log(this.props.error);\n    return __jsx(\"div\", {\n      style: {\n        padding: \"10px\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" Log In \"), __jsx(Input, {\n      style: {\n        marginBottom: \"10px\"\n      },\n      placeholder: \"Email\",\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(Input, {\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: event => this.setState({\n        password: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), __jsx(Button, {\n      type: \"primary\",\n      style: {\n        margin: \"20px 20px 0px 20px\"\n      },\n      onClick: this.submit,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Log In\"), this.props.error ? __jsx(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        color: \"red\",\n        margin: \"10px 0px -10px 0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Login Error!\") : null), __jsx(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), __jsx(Button, {\n      style: {\n        margin: \"0px 20px 0 20px\"\n      },\n      onClick: () => Router.push(\"/register/student\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Register (Student)\"), __jsx(Button, {\n      style: {\n        margin: \"0px 20px 0 20px\"\n      },\n      onClick: () => Router.push(\"/register/admin\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Register (Administrator)\"));\n  }\n\n  renderLoggedIn() {\n    const web3 = new Web3(\"https://rinkeby.infura.io/v3/6a20903e63ec4a96a771a79800a1a1d4\");\n\n    const full = __jsx(\"div\", {\n      style: {\n        padding: \"10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      style: {\n        fontSize: \"120%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" Signed in as \"), __jsx(\"span\", {\n      style: {\n        fontSize: \"150%\",\n        color: \"#10004e\",\n        fontWeight: \"600\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.props.user.name)), __jsx(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.links.map(link => __jsx(Button, {\n      icon: link.icon,\n      onClick: link.click,\n      style: {\n        width: \"120px\",\n        margin: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, link.text))), __jsx(Button, {\n      icon: \"logout\",\n      onClick: () => this.props.logoutUser(() => Router.push(\"/\")),\n      type: \"danger\",\n      style: {\n        width: \"220px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Logout\"));\n\n    return full;\n  }\n\n  render() {\n    return this.props.isAuthenticated ? this.renderLoggedIn() : this.renderNotLoggedIn();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    user,\n    isAuthenticated,\n    error\n  } = state.auth; //const { error, text } = state.errors;\n\n  return {\n    user,\n    isAuthenticated,\n    error\n  };\n};\n\nexport default connect(mapStateToProps, null)(PlayerInfo);","map":{"version":3,"sources":["/Users/jackieni/dev/hackathon/invisible-ink/invisible-ink-frontend/components/UserInfo.js"],"names":["React","Component","connect","Divider","Icon","Button","Input","Router","axios","Web3","PlayerInfo","dcBalance","ethBalance","value","expand","email","password","loading","user","state","props","loginUser","callback","push","text","icon","renderNotLoggedIn","console","log","error","padding","display","flexDirection","justifyContent","textAlign","marginBottom","event","setState","target","margin","submit","color","renderLoggedIn","web3","full","alignItems","fontSize","fontWeight","name","flexWrap","links","map","link","click","width","logoutUser","render","isAuthenticated","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n//import { setCurrentUser, logoutUser, loginUser } from '../redux/actions/auth_actions';\nimport { Divider, Icon, Button, Input } from \"antd\";\nimport { Router } from \"../routes\";\nimport axios from \"axios\";\nimport Web3 from \"web3\";\n\nclass PlayerInfo extends Component {\n  state = {\n    dcBalance: \"0\",\n    ethBalance: \"0\",\n    value: 0,\n    expand: false,\n    email: \"\",\n    password: \"\",\n    loading: false\n  };\n\n  submit = async () => {\n    const user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(user, this.callback);\n  };\n\n  callback = () => {\n    Router.push(\"/cases\");\n  };\n\n  renderNotLoggedIn() {\n    console.log(this.props.error);\n    return (\n      <div\n        style={{\n          padding: \"10px\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            textAlign: \"center\"\n          }}\n        >\n          <h2> Log In </h2>\n          <Input\n            style={{ marginBottom: \"10px\" }}\n            placeholder=\"Email\"\n            onChange={event =>\n              this.setState({\n                email: event.target.value\n              })\n            }\n          />\n          <Input\n            placeholder=\"Password\"\n            type=\"password\"\n            onChange={event =>\n              this.setState({\n                password: event.target.value\n              })\n            }\n          />\n          <Button\n            type=\"primary\"\n            style={{ margin: \"20px 20px 0px 20px\" }}\n            onClick={this.submit}\n            loading={this.state.loading}\n          >\n            Log In\n          </Button>\n\n          {this.props.error ? (\n            <h3\n              style={{\n                textAlign: \"center\",\n                color: \"red\",\n                margin: \"10px 0px -10px 0px\"\n              }}\n            >\n              Login Error!\n            </h3>\n          ) : null}\n        </div>\n\n        <Divider />\n        <Button\n          style={{ margin: \"0px 20px 0 20px\" }}\n          onClick={() => Router.push(\"/register/student\")}\n        >\n          Register (Student)\n        </Button>\n        <Button\n          style={{ margin: \"0px 20px 0 20px\" }}\n          onClick={() => Router.push(\"/register/admin\")}\n        >\n          Register (Administrator)\n        </Button>\n      </div>\n    );\n  }\n\n  renderLoggedIn() {\n    const web3 = new Web3(\n      \"https://rinkeby.infura.io/v3/6a20903e63ec4a96a771a79800a1a1d4\"\n    );\n\n    const full = (\n      <div\n        style={{\n          padding: \"10px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          }}\n        >\n          <span style={{ fontSize: \"120%\" }}> Signed in as </span>\n          <span\n            style={{\n              fontSize: \"150%\",\n              color: \"#10004e\",\n              fontWeight: \"600\"\n            }}\n          >\n            {this.props.user.name}\n          </span>\n        </div>\n\n        <Divider />\n\n        {/* <div\n                    style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        justifyContent: 'center',\n                        textAlign: 'center'\n                    }}\n                >\n                    <div>\n                        <span style={{ fontWeight: '600' }}>Dapp Balance:&ensp;</span>{' '}\n                        {formatPrice(this.props.user.dappBalance)}\n                    </div>\n                    <div style={{ marginBottom: '20px' }}>\n                        <span style={{ fontWeight: '600' }}>Ether Balance:&ensp;&nbsp;</span>{' '}\n                        {formatPrice(this.props.user.ethBalance)}\n                    </div>\n\n                    <div style={{ marginBottom: '20px' }}>\n                        <span style={{ fontWeight: '600' }}>Dapp Address:&ensp;&nbsp;</span>\n                        <br />\n                        <span style={{ fontSize: '90% ' }}>{this.props.user.address}</span>\n                    </div>\n\n                    <div style={{ marginBottom: '20px' }}>\n                        <span style={{ fontWeight: '600' }}>Ether Address:&ensp;&nbsp;</span>\n                        <br />\n                        <span style={{ fontSize: '90% ' }}>{this.props.user.ethAddress}</span>\n                    </div>\n\n                    <span style={{ fontWeight: '500', fontSize: '120%' }}>Add Ether</span>\n                    <div\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row'\n                        }}\n                    >\n                        <EtherSelector\n                            onBuyChange={event => this.setState({ value: event })}\n                            value={this.state.value}\n                            onDenominationChange={event => this.setState({ denom: event })}\n                            wide\n                        />\n                        <Button onClick={this.addEther} icon=\"check\" />\n                    </div>\n                </div> */}\n\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\"\n          }}\n        >\n          {this.links.map(link => (\n            <Button\n              icon={link.icon}\n              onClick={link.click}\n              style={{ width: \"120px\", margin: \"5px\" }}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </div>\n        <Button\n          icon=\"logout\"\n          onClick={() => this.props.logoutUser(() => Router.push(\"/\"))}\n          type=\"danger\"\n          style={{ width: \"220px\" }}\n        >\n          Logout\n        </Button>\n      </div>\n    );\n\n    return full;\n  }\n\n  render() {\n    return this.props.isAuthenticated\n      ? this.renderLoggedIn()\n      : this.renderNotLoggedIn();\n  }\n\n  links = [\n    { text: \"Bugs\", icon: \"exclamation-circle\" },\n    { text: \"Friends\", icon: \"team\" }\n  ];\n}\n\nconst mapStateToProps = state => {\n  const { user, isAuthenticated, error } = state.auth;\n  //const { error, text } = state.errors;\n  return { user, isAuthenticated, error };\n};\n\nexport default connect(\n  mapStateToProps,\n  null\n)(PlayerInfo);\n"]},"metadata":{},"sourceType":"module"}